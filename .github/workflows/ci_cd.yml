name: SEU Detector CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    # Manual trigger

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install additional dev dependencies
        pip install black isort mypy

    - name: Run linters
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Run full linting with flake8, but only as warning
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # Check formatting with black
        black --check --diff .
        # Check import sorting
        isort --check --diff .

    - name: Generate synthetic data for testing
      run: |
        python -m ml_pipeline.SEU-Synthetic-Data-Creator
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        pytest test_seu_detector.py --cov=. --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push API server
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.api
        push: true
        tags: apex/seu-detector-api:latest,apex/seu-detector-api:${{ github.sha }}

    - name: Build and push Dashboard
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.dashboard
        push: true
        tags: apex/seu-detector-dashboard:latest,apex/seu-detector-dashboard:${{ github.sha }}
